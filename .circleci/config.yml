version: 2.1

workflows:
  pack-binaries:
    jobs:
      - pack-binaries
      - upload-binaries:
          context:
            - github
          requires:
            - pack-binaries

jobs:

  pack-binaries:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.medium
    steps:
      - restore_cache:
          name: Restore Qt Cache
          keys:
            - Qt-6.8.0
      - run: |
          if [ -d "~/Qt" ]; then
            echo "Qt already installed."
          else
            python -m pip install setuptools aqtinstall
            cd ~
            python -m aqt install-qt --outputdir ~/Qt linux_arm64 desktop 6.8.0 linux_gcc_arm64
          fi
      - save_cache:
          name: Save Qt Cache
          keys:
            - Qt-6.8.0
          paths:
            - ~/Qt

      - checkout
      - run: |
          mkdir -p ~/artifacts
          node -p "require('./package').version" > ~/artifacts/pkg-version
      - run: ~/Qt/6.8.0/gcc_arm64/bin/qmake -spec linux-aarch64-gnu-g++ src/qt/_qmlui.pro
      - run: |
          cd ~
          GLIBC_INSTALL="$(pwd)/glibc/build/install"

      - restore_cache:
        name: Restore GLIBC Cache
        keys:
          - glibc-2.40
      - run: |
          if [ -d "~/glibc" ]; then
            echo "GLIBC already installed."
          else
            sudo apt-get -y install bison
            cd ~
            git clone --branch release/2.40/master --depth 1 https://sourceware.org/git/glibc.git
            cd glibc
            mkdir build
            cd build
            ../configure --prefix "$GLIBC_INSTALL"
            make -j `nproc`
            make install -j `nproc`
          fi
          ls $GLIBC_INSTALL/lib
      - save_cache:
          name: Save GLIBC Cache
          keys:
          - glibc-2.40
          paths:
            - ~/glibc

      - run: LD_LIBRARY_PATH=$GLIBC_INSTALL/lib make
      - run: |
          mkdir -p ~/bin_tmp
          cp src/libqmlui.so ~/bin_tmp
          cd ~/bin_tmp && tar -czf ../aarch64.gz *
          mkdir -p ~/artifacts && mv ~/aarch64.gz ~/artifacts
      - persist_to_workspace:
          root: ~/artifacts
          paths:
            - aarch64.gz
            - pkg-version

  upload-binaries:
    docker:
      - image: circleci/golang:1.8
    steps:
      - attach_workspace:
          at: /tmp/artifacts
      - run: go get github.com/tcnksm/ghr
      - run: |
          PKG_VERSION=`cat /tmp/artifacts/pkg-version`
          ghr -u "node-3d" -r "${CIRCLE_PROJECT_REPONAME}" -c "${CIRCLE_SHA1}" -n "Release ${PKG_VERSION}" -replace ${PKG_VERSION} /tmp/artifacts/aarch64.gz
